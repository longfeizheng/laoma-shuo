package cn.merryyou.laoma_shuo._18;

/**
 * 继承虽然强大，但继承可能破坏封装，而封装可以说是程序设计第一原则
 *
 *
 *
 避免使用继承
 1.使用final关键字
 2.优先使用组合而非继承
 3.使用接口

 正确使用继承
 1.基类是别人写的，我们写子类。
 2.我们写基类，别人可能写子类。
 3.基类、子类都是我们写的。

 *
 * Created by 11 on 2017/4/24.
 */
public class Test {
    public static void main(String[] args) {
        Child c = new Child();
        c.addAll(new int[]{1, 2, 3});
        c.clear();
        c.addAll(new int[]{1, 2, 3});
        System.out.println(c.getSum());
        /**
         子类和父类之间是细节依赖，子类扩展父类，仅仅知道父类能做什么是不够的，还需要知道父类是怎么做的，而父类的实现细
         节也不能随意修改，否则可能影响子类。子类需要知道父类的可重写方法之间的依赖关系

         父类不能随意增加公开方法，因为给父类增加就是给所有子类增加，而子类可能必须要重写该方法才能确保方法的正确性


         对于子类而言，通过继承实现，是没有安全保障的，父类修改内部实现细节，它的功能就可能会被破坏，而对于基类而言，
         让子类继承和重写方法，就可能丧失随意修改内部实现的自由。
         */
    }
}
