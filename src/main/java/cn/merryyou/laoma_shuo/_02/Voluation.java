package cn.merryyou.laoma_shuo._02;

/**
 * 赋值
 * Created by zlf on 2017/4/19.
 */
public class Voluation {
    public static void main(String[] args) {
        byte b = 23;
        short s = 3333;
        int i = 9999;
        long l = 32323;
        //在给long类型赋值时，如果常量超过了int的表示范围，需要在常量后面加大写或小写的L
        long a = 3232343433L;

        //小数类型
        //double 类型 直接赋值即可
        double d = 333.33;
        //float 类型需要在数字后面加大写活小写的f  ,这是由于小说常量默认为double类型
        float f = 333.33f;

        //boolean类型
        boolean flag = true;
        flag = false;

        //字符类型
        //字符类型赋值时把常量字符用单引号括起来，不要使用双引号
        char c = 'A';
        char z = '中';

        //也可以直接把一个变量赋值给常量 如下
        int k = 100;
        int m = k;
        int n = 2 * k + m;

        //数组类型
        int[] arr = {1, 2, 3};
        int[] arr1 = new int[]{1, 2, 3};
        int[] arr2 = new int[3];
        arr2[0] = 1;
        arr2[1] = 2;
        arr2[2] = 3;//第三种形式中每个元素都有一个默认的值，这跟数组的类型有关，数值型的值为0，boolean为false,char为空字符串

        //注 不能再给初始值的同事还给定长度
        //int[] arr3 = new int[3]{1,2,3}; 错误


        /**
         数组和基本类型的区别
         一个基本类型变量，内存中只会有一块对应的内存空间。但数组有两块，一块用于存储数组内容本身，另一块用于存储内容的位置。

         代码               内存地址         内存数据
         int a = 100;         1000             100
         int arr = {1,2,3};   2000             3000
                              3000             1
                              3004             2
                              30008            3

         基本类型a的内存地址是1000，这个位置存储的就是它的值100。

         数组类型arr的内存地址是2000，这个位置存储的值是一个位置3000，3000开始的位置存储的才是实际的数据1,2,3。

         为什么数组要用两块空间

         int[] arrA = {1,2,3};
         int[] arrB = {4,5,6,7};
         arrA = arrB;

         这个代码中，arrA初始的长度是3，arrB的长度是4，后来将arrB的值赋给了arrA。如果arrA对应的内存空间是直接存储的数组
         内容，那么它将没有足够的空间去容纳arrB的所有元素。

         用两块空间存储，这个就简单的多，arrA存储的值就变成了和arrB的一样，存储的都是数组内容{4,5,6,7}的地址，此后访问arrA
         就和arrB是一样的了，而arrA {1,2,3}的内存空间由于无人引用会被垃圾回收，

         arrA        {1,2,3}
            \
             \
         arrB  ->  {4,5,6,7}


         给变量赋值就是将变量对应的内存空间设置为一个明确的值，有了值之后，变量可以被加载到CPU，CPU可以对这些值进行各种
         运算，运算后的结果又可以被赋值给变量，保存到内存中。
         */


    }
}
